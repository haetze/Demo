EXCEED-USER: praktikant
EXCEED-Passwort: hkm2011


UNIX-Befehle:
=============

cd c_prog/prakti     "change directory"  in Verzeichnis wechseln!

ll                    Inhalt des Verzeichnisses auflisten

cp prog.c neu.c      "copy"  kopiere prog.c nach neu.c

rm datei             "remove"    Datei loeschen

mv prog.c neu.c      "move"  Datei bewegen/umbenennen


VIM-Befehle:
============

I      "I"nsert

ESC    "ESC"APE

:w      Quelle schreiben

:q      Quelle verlassen

yy      Zeile kopieren

p       Zeile einfuegen

dd      Zeile loeschen

u      "U"ndo  rueckgaengig machen

x       Zeichen loeschen

a      "a"ppend  anfuegen

A       am Ende der Zeile anfuegen


Arbeiten am Programm mit mehreren Fenstern:
-------------------------------------------
+------------------------+   +-----------------------------+
| Editieren              |   | Uebersetzen/Compilieren     |
+------------------------+   +-----------------------------+
|                        |   |                             |
| vi progname.c          |   | cc -o progname progname.c   |
|                        |   |                             |
|                        |   +-----------------------------+
|                        |
|                        |   +-----------------------------+
|                        |   | Ausfuehren                  |
|                        |   +-----------------------------+
|                        |   |                             |
|                        |   | progname                    |
|                        |   |                             |
+------------------------+   +-----------------------------+

Prinzipieller Aufbau eines C-Programms:
=======================================

int main (void)        | Programmkopf, so oder so aehnlich 
{                      | syntaktisch vorgeschrieben
  
  int i, j;            | Datendefinitionen
  
  i = 5;               | 
  j = i;               |
  j = j + 17;          | Anweisungen, Instruktionen
  printf("i=%d ",i);   |
  printf("j=%d \n",j); |

  return 0;            | Ende des Programms, syntaktisch 
}                      | vorgeschrieben
  

C-Datentypen:
=============

Integer-Variablen:     | Ganzzahlige Werte: z.B. 123, 4711, -6571, 0
------------------

int zaehler;
int i = 0;

Float-Variablen:       | Gleitpunktwerte: z.B. 3.1415, -0.684, 18.1
----------------

float summe;
float wert = 10.55;

Character-Variablen:   | Zeichenwerte: z.B. 'a', 'd', 'Q', 'T', '#', '*', '6'
--------------------

char zeichen;
char frage = 'j';



C-Befehle:
==========

Ausgabe auf Bildschirm:
-----------------------
printf("Text und Formatierungen %d zum Beispiel!\n", 34);

Platzhalter:  %d  fuer ganzzahlige Variablen (int)
              %f  fuer Gleitpunktvariablen (float)
              %c  fuer Zeichen
              %s  fuer Texte (char*)


Zaehlschleifen:
===============

FOR-Schleife: (Kopfgesteuert)
-------------

allgemein:

for (Initialisierung; Bedingung; Inkrementierung)
  Anweisung
  
+-----------------------------+
| Fuer i von 0 bis 99         |
|      +----------------------+
|      |                      |
|      |                      |
|      |     Anweisung        |
|      |                      |
|      |                      |
+------+----------------------+

Beispiel:

for (zaehler=0; zaehler<20; zaehler=zaehler+1)
{
   /*Hier steht jetzt das, was gemacht werden soll*/
}


WHILE-Schleife: (Kopfgesteuert)
---------------

allgemein: 

while (Bedingung)
  Anweisung

+-----------------------------+
| Solange die Bedingung gilt  |
|      +----------------------+
|      |                      |
|      |                      |
|      |     Anweisung        |
|      |                      |
|      |                      |
+------+----------------------+

Beispiel:

while (zaehler<20)
{
  /*Hier steht jetzt das, was gemacht werden soll*/
}

DO-WHILE-Schleife: (Fussgesteuert)
------------------

allgemein:

do
  Anweisung
while(Bedingung)

+------+----------------------+
|      |                      |
|      |                      |
|      |     Anweisung        |
|      |                      |
|      |                      |
|      +----------------------+
| Solange die Bedingung gilt  |
+-----------------------------+

Beispiel:

do
{
  /*Hier steht jetzt das, was gemacht werden soll*/
}
while (zaehler<20);
  


Auswahlanweisungen:
===================

IF-Anweisung:
-------------
if (Bedingung)
{
   /*hier der JA-Fall    (wenn)*/
}
else
{
   /*hier der NEIN-Fall  (sonst)*/
}

Bedingungen:
------------
<    kleiner
>    groesser
==   gleich
<=   kleiner  gleich
>=   groesser gleich
&&   und
||   oder


Eingaben:
=========

Eingabe einer Ganzzahl:
-----------------------
int zahl;
scanf("%d",&zahl);
fflush(stdin);

Eingabe von Text:
-----------------
char text[128];
scanf("%s",text);
fflush(stdin);

